#+OPTIONS: ':nil *:t -:t ::t <:t H:nil \n:nil ^:nil arch:headline author:nil
#+OPTIONS: broken-links:nil c:nil creator:nil d:(not "LOGBOOK") date:nil e:t
#+OPTIONS: email:nil f:t inline:t num:nil p:nil pri:nil prop:nil stat:t tags:t
#+OPTIONS: tasks:t tex:t timestamp:nil title:t toc:nil todo:t |:t
#+TITLE:
#+AUTHOR:
#+EMAIL:
#+LANGUAGE: en
#+SELECT_TAGS: export
#+EXCLUDE_TAGS: noexport
#+LATEX_CLASS: article
#+LATEX_CLASS_OPTIONS:
#+LATEX_HEADER:
#+LATEX_HEADER_EXTRA:
#+DESCRIPTION:
#+KEYWORDS:
#+SUBTITLE:
#+LATEX_COMPILER: pdflatex
#+DATE:
#+STARTUP: showall
#+OPTIONS: html-link-use-abs-url:nil html-postamble:nil html-preamble:tbla
#+OPTIONS: html-scripts:t html-style:t html5-fancy:nil tex:t
#+HTML_DOCTYPE: xhtml-strict
#+HTML_CONTAINER: div
#+DESCRIPTION:
#+KEYWORDS:
#+HTML_LINK_HOME:
#+HTML_LINK_UP:
#+HTML_MATHJAX:
#+HTML_HEAD:
#+HTML_HEAD_EXTRA:
#+SUBTITLE:
#+INFOJS_OPT:
#+OPTIONS: reveal_width:1600 reveal_height:900
#+REVEAL_THEME: white-contrast
#+REVEAL_TRANS: fade
#+REVEAL_MATHJAX_URL: https://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML

#+HTML_HEAD: <link rel="stylesheet" type="text/css" href="./vivendi-tinted.css" />
#+REVEAL_EXTRA_CSS: ./vivendi-tinted.css
#+REVEAL_EXTRA_CSS: ./footer.css
#+REVEAL_TITLE_SLIDE_BACKGROUND: http://sdowney.org/images/ModuleTitle.png

#+REVEAL_ROOT: https://cdn.jsdelivr.net/npm/reveal.js
#+REVEAL_VERSION: 4

#+REVEAL_HLEVEL: 2

* Using Sender/Receiver for Async Control Flow

  Steve Downey

  Â© 2021 Bloomberg Finance L.P. All rights reserved.

* Abstract

How can P2300 Senders be composed using sender adapters and sender factories to provide arbitrary progam control flow?

   #+ATTR_REVEAL: :frag (appear)
   - How do I use these things?

#+begin_notes

#+end_notes

* ~std::execution~

https://isocpp.org/files/papers/P2300R7.html

#+begin_quote
A self-contained design for a Standard C++ framework for managing asynchronous execution on generic execution resources.
#+end_quote

#+begin_notes

#+end_notes

** Three Key Abstractions
1. Schedulers
2. Senders
3. Receivers

*** Schedulers
Responsible for scheduling work on execution resources.

Execution resources are things like threads, GPUs, and so on.

Sends work to be done in a place.


#+begin_notes

#+end_notes

*** Senders
Senders describe work.

#+begin_notes

#+end_notes

*** Receiver

Recievers are where work terminates.

- Value channel
- Error channel
- Stopped channel

#+begin_notes

#+end_notes

*** Hello Async World

#+begin_src C++ -n :tangle ./sender-examples/src/examples/hello.cpp :comments link
#include <stdexec/execution.hpp>
#include <exec/static_thread_pool.hpp>
#include <iostream>

int main() {
  exec::static_thread_pool pool(8);

  stdexec::scheduler auto sch = pool.get_scheduler();

  stdexec::sender auto begin = stdexec::schedule(sch);
  stdexec::sender auto hi    = stdexec::then(begin, [] {
    std::cout << "Hello world! Have an int.";
    return 13;
  });

  auto add_42 = stdexec::then(hi, [](int arg) { return arg + 42; });

  auto [i] = stdexec::sync_wait(add_42).value();
}
#+end_src

#+RESULTS:

[[https://godbolt.org/z/1M5enroaE][Compiler Explorer]]

*** Hello Async World Results

#+RESULTS: hello
#+begin_example
Hello world! Have an int.
#+end_example


*** When All - Concurent Async

#+BEGIN_SRC c++ :exports none :tangle ./sender-examples/src/examples/concurent.cpp :comments link
#include <stdexec/execution.hpp>
#include <exec/static_thread_pool.hpp>

int main()
{
#+END_SRC

#+begin_src c++ -n :tangle ./sender-examples/src/examples/concurent.cpp :comments link :exports code
exec::static_thread_pool pool(3);

auto sched = pool.get_scheduler();

auto fun = [](int i) { return i * i; };

auto work = stdexec::when_all(
    stdexec::on(sched, stdexec::just(0) | stdexec::then(fun)),
    stdexec::on(sched, stdexec::just(1) | stdexec::then(fun)),
    stdexec::on(sched, stdexec::just(2) | stdexec::then(fun)));

auto [i, j, k] = stdexec::sync_wait(std::move(work)).value();

std::printf("%d %d %d\n", i, j, k);
#+end_src

#+BEGIN_SRC c++ :exports none :tangle ./sender-examples/src/examples/concurent.cpp :comments link
}
#+END_SRC

#+RESULTS:

#+begin_notes
  // Describe some work:

  // Creates 3 sender pipelines that are executed concurrently by passing to `when_all`

  // Each sender is scheduled on `sched` using `on` and starts with `just(n)` that creates a

  // Sender that just forwards `n` to the next sender.

  // After `just(n)`, we chain `then(fun)` which invokes `fun` using the value provided from `just()`

  // Note: No work actually happens here. Everything is lazy and `work` is just an object that statically

  // represents the work to later be executed

#+end_notes

*** Dynamic Choice of Sender

#+BEGIN_SRC c++ :exports none :tangle ./sender-examples/src/examples/let_value.cpp :comments link
#include <stdexec/execution.hpp>
#include <exec/static_thread_pool.hpp>
#include <string>

int main()
{
#+END_SRC

#+begin_src c++ -n :tangle ./sender-examples/src/examples/let_value.cpp :comments link :exports code
exec::static_thread_pool pool(3);

auto sched = pool.get_scheduler();

auto fun = [](int i) -> stdexec::sender auto {
  using namespace std::string_literals;
  if ((i % 2) == 0) {
    return stdexec::just("even"s);
  } else {
    return stdexec::just("odd"s);
  }
};

auto work = stdexec::when_all(
    stdexec::on(sched, stdexec::just(0) | stdexec::let_value(fun)),
    stdexec::on(sched, stdexec::just(1) | stdexec::let_value(fun)),
    stdexec::on(sched, stdexec::just(2) | stdexec::let_value(fun))

auto [i, j, k] = stdexec::sync_wait(std::move(work)).value();

std::printf("%s %s %s", i.c_str(), j.c_str(), k.c_str());
#+end_src

#+BEGIN_SRC c++ :exports none :tangle ./sender-examples/src/examples/let_value.cpp :comments link
}
#+END_SRC


https://godbolt.org/z/7vx69cMj9

#+RESULTS:

#+begin_notes

#+end_notes

*** Enough API to talk about control flow

The minimal set being:
- stdexec::on
- stdexec::just
- stdexec::then
- stdexec::let_value
- stdexec::sync_wait

  I will ignore the other channels.

#+begin_notes

#+end_notes

* Vigorous Handwaving

** Some Theory

Continuation Passing Style

*** Not At All New

Sussman and Steele in 1975

AI Memo 349: "Scheme: An Interpreter for Extended Lambda Calculus"

#+begin_notes

#+end_notes

*** Pass a "Continuation"

Where to go next rather than return the value.

#+begin_src haskell
add :: Float -> Float -> Float
add a b = a + b

add_cps :: Float -> Float -> (Float -> a) -> a
add_cps a b cont = cont (a + b)
#+end_src

#+begin_src c++
auto add(float a, float b) -> float {
    return a + b;
}

template<typename Cont>
auto add_cps(float a, float b, Cont k) {
    return k(a+b);
}
#+end_src

#+begin_notes

#+end_notes

*** Inherently a tail call

In continuation passing style we never return.

We send a value to the rest of the program.

Hard to express in C++.

Extra machinery necessary to do the plumbing.

#+begin_notes

#+end_notes

*** Intermittently Popular as a Compiler Technique

The transformations of direct functions to CPS are mechanical.

The result is easier to optimize and mechanically reason about.

Equivalent to Single Static Assignment.

Structured Programming can be converted to CPS.

#+begin_notes

#+end_notes

*** Underlies Senders

Senders "send" to their continuations.

The plumbing is hidden.

#+begin_notes

#+end_notes

** Another Level of Indiretion

*** Solves all problems

Adds two more.

*** Sender Indirects Function Return

Transform a function

A -> B

to

B -> (B -> R) -> R

The A is (mostly) erased from the Sender.

** In which we use the M word

*** Sender is a Monad
(surprise)
*** Function Composition is the hint
Functions are units of work.

We compose them into programs.

The question is if the rules apply.

*** Monad Functions

*** Monad Laws

*** Sender is Three Monads in a Trenchcoat

Stacked up.

- Value
- Error
- Stopped

** The Three Parts
*** Just
Send a value.

~lift~

*** Then
Send a value returned from a function that takes its argument from a Sender.

~fmap~

*** Let_value
Send what is returned by a Sender returned from a function that takes its argument from a Sender.

~bind~

*** Necessary and Sufficient
Much handwaving

The mondic bind gives us the runtime choices we need.

** Basis of Control
- Sequence
- Decision
- Recursion

*** Sequence

~then~

*** Decision

*** Recursion

* Don't Do That
** Can is not Should
** Write an Algorithm
** Why You Might
- Throughput
- Interruptable



* Thank You

* Tangle before export                                             :noexport:
To retangle the document, run `C-c C-v t` or eval the last src block

#+NAME: run-build
#+BEGIN_SRC sh :exports both :results output
cd sender-examples
make realclean TOOLCHAIN=clang-15
make TOOLCHAIN=clang-15
make test TOOLCHAIN=clang-15
make install TOOLCHAIN=clang-15
#+END_SRC

#+RESULTS: run-build
#+begin_example
make -f targets.mk realclean CONFIG= TOOLCHAIN=clang-15
make[1]: Entering directory '/home/sdowney/src/papers/cppnow23/sender-examples'
rm -rf ../cmake.bld/sender-examples/build-clang-15
make[1]: Leaving directory '/home/sdowney/src/papers/cppnow23/sender-examples'
make -f targets.mk test CONFIG= TOOLCHAIN=clang-15
make[1]: Entering directory '/home/sdowney/src/papers/cppnow23/sender-examples'
mkdir -p ../cmake.bld/sender-examples/build-clang-15
cd ../cmake.bld/sender-examples/build-clang-15 && 	cmake -G "Ninja Multi-Config" -DCMAKE_CONFIGURATION_TYPES="RelWithDebInfo;Debug;Tsan;Asan" -DCMAKE_INSTALL_PREFIX= -DCMAKE_EXPORT_COMPILE_COMMANDS=1 -DCMAKE_TOOLCHAIN_FILE=/home/sdowney/src/papers/cppnow23/sender-examples/etc/clang-15-toolchain.cmake /home/sdowney/src/papers/cppnow23/sender-examples
-- The CXX compiler identification is Clang 15.0.7
-- Detecting CXX compiler ABI info
-- Detecting CXX compiler ABI info - done
-- Check for working CXX compiler: /usr/bin/clang++-15 - skipped
-- Detecting CXX compile features
-- Detecting CXX compile features - done
-- The C compiler identification is Clang 15.0.7
-- Detecting C compiler ABI info
-- Detecting C compiler ABI info - done
-- Check for working C compiler: /usr/bin/clang-15 - skipped
-- Detecting C compile features
-- Detecting C compile features - done
-- Found Python: /usr/bin/python3 (found version "3.11.2") found components: Interpreter
-- Performing Test CMAKE_HAVE_LIBC_PTHREAD
-- Performing Test CMAKE_HAVE_LIBC_PTHREAD - Success
-- Found Threads: TRUE
-- System           : Linux-5.19.0-40-generic
-- System name      : Linux
-- System ver       : 5.19.0-40-generic
--
-- Library ver      : 0.8.0
-- Build date       : 2023-04-22
-- Build year       : 2023
--
-- CPM: adding package Catch2@2.13.6 (2.13.6)
-- Configuring done
-- Generating done
-- Build files have been written to: /home/sdowney/src/papers/cppnow23/cmake.bld/sender-examples/build-clang-15
rm compile_commands.json
ln -s ../cmake.bld/sender-examples/build-clang-15/compile_commands.json
cmake --build ../cmake.bld/sender-examples/build-clang-15  --config RelWithDebInfo --target all -v -- -k 0
[1/14] /usr/bin/clang++-15 -DCMAKE_INTDIR=\"RelWithDebInfo\" -I/home/sdowney/src/papers/cppnow23/sender-examples/src/scratch/.. -std=c++20    -Wall -Wextra    -stdlib=libc++  -O3 -g -DNDEBUG -MD -MT src/scratch/CMakeFiles/scratch.dir/RelWithDebInfo/scratch.cpp.o -MF src/scratch/CMakeFiles/scratch.dir/RelWithDebInfo/scratch.cpp.o.d -o src/scratch/CMakeFiles/scratch.dir/RelWithDebInfo/scratch.cpp.o -c /home/sdowney/src/papers/cppnow23/sender-examples/src/scratch/scratch.cpp
[2/14] : && /usr/bin/cmake -E rm -f src/scratch/RelWithDebInfo/libscratch.a && /usr/bin/llvm-ar-15 qc src/scratch/RelWithDebInfo/libscratch.a  src/scratch/CMakeFiles/scratch.dir/RelWithDebInfo/scratch.cpp.o && /usr/bin/llvm-ranlib-15 src/scratch/RelWithDebInfo/libscratch.a && :
[3/14] /usr/bin/clang++-15 -DCMAKE_INTDIR=\"RelWithDebInfo\" -I/home/sdowney/src/papers/cppnow23/sender-examples/src/scratch/.. -std=c++20    -Wall -Wextra    -stdlib=libc++  -O3 -g -DNDEBUG -MD -MT src/examples/CMakeFiles/main.dir/RelWithDebInfo/main.cpp.o -MF src/examples/CMakeFiles/main.dir/RelWithDebInfo/main.cpp.o.d -o src/examples/CMakeFiles/main.dir/RelWithDebInfo/main.cpp.o -c /home/sdowney/src/papers/cppnow23/sender-examples/src/examples/main.cpp
[4/14] : && /usr/bin/clang++-15 -std=c++20    -Wall -Wextra    -stdlib=libc++  -O3 -g -DNDEBUG  src/examples/CMakeFiles/main.dir/RelWithDebInfo/main.cpp.o -o src/examples/RelWithDebInfo/main  src/scratch/RelWithDebInfo/libscratch.a && :
[5/14] /usr/bin/clang++-15 -DCMAKE_INTDIR=\"RelWithDebInfo\" -isystem /home/sdowney/src/papers/cppnow23/sender-examples/extern/googletest/googletest/include -isystem /home/sdowney/src/papers/cppnow23/sender-examples/extern/googletest/googletest -std=c++20    -Wall -Wextra    -stdlib=libc++  -O3 -g -DNDEBUG -Wall -Wshadow -Wconversion -Wundef -DGTEST_HAS_PTHREAD=1 -fexceptions -W -Wpointer-arith -Wreturn-type -Wcast-qual -Wwrite-strings -Wswitch -Wunused-parameter -Wcast-align -Wchar-subscripts -Winline -Wredundant-decls -MD -MT extern/googletest/googletest/CMakeFiles/gtest_main.dir/RelWithDebInfo/src/gtest_main.cc.o -MF extern/googletest/googletest/CMakeFiles/gtest_main.dir/RelWithDebInfo/src/gtest_main.cc.o.d -o extern/googletest/googletest/CMakeFiles/gtest_main.dir/RelWithDebInfo/src/gtest_main.cc.o -c /home/sdowney/src/papers/cppnow23/sender-examples/extern/googletest/googletest/src/gtest_main.cc
[6/14] /usr/bin/clang++-15 -DCMAKE_INTDIR=\"RelWithDebInfo\" -I/home/sdowney/src/papers/cppnow23/sender-examples/src/scratch/.. -isystem /home/sdowney/src/papers/cppnow23/sender-examples/extern/googletest/googletest/include -isystem /home/sdowney/src/papers/cppnow23/sender-examples/extern/googletest/googletest -std=c++20    -Wall -Wextra    -stdlib=libc++  -O3 -g -DNDEBUG -MD -MT src/scratch/CMakeFiles/scratch_test.dir/RelWithDebInfo/scratch.t.cpp.o -MF src/scratch/CMakeFiles/scratch_test.dir/RelWithDebInfo/scratch.t.cpp.o.d -o src/scratch/CMakeFiles/scratch_test.dir/RelWithDebInfo/scratch.t.cpp.o -c /home/sdowney/src/papers/cppnow23/sender-examples/src/scratch/scratch.t.cpp
[7/14] /usr/bin/clang++-15 -DCMAKE_INTDIR=\"RelWithDebInfo\" -I/home/sdowney/src/papers/cppnow23/sender-examples/extern/stdexec/include -std=c++20    -Wall -Wextra    -stdlib=libc++  -O3 -g -DNDEBUG -MD -MT src/examples/CMakeFiles/hello.dir/RelWithDebInfo/hello.cpp.o -MF src/examples/CMakeFiles/hello.dir/RelWithDebInfo/hello.cpp.o.d -o src/examples/CMakeFiles/hello.dir/RelWithDebInfo/hello.cpp.o -c /home/sdowney/src/papers/cppnow23/sender-examples/src/examples/hello.cpp
In file included from /home/sdowney/src/papers/cppnow23/sender-examples/src/examples/hello.cpp:2:
/home/sdowney/src/papers/cppnow23/sender-examples/extern/stdexec/include/stdexec/execution.hpp:130:50: warning: unused parameter '__t' [-Wunused-parameter]
      constexpr __result_t<_Tp> operator()(_Tp&& __t) const noexcept(noexcept(__result_t<_Tp>{})) {
                                                 ^
/home/sdowney/src/papers/cppnow23/sender-examples/extern/stdexec/include/stdexec/execution.hpp:968:43: warning: unused parameter '__sndr' [-Wunused-parameter]
      constexpr auto operator()(_Sender&& __sndr, const _Env& __env) const noexcept
                                          ^
/home/sdowney/src/papers/cppnow23/sender-examples/extern/stdexec/include/stdexec/execution.hpp:968:63: warning: unused parameter '__env' [-Wunused-parameter]
      constexpr auto operator()(_Sender&& __sndr, const _Env& __env) const noexcept
                                                              ^
/home/sdowney/src/papers/cppnow23/sender-examples/extern/stdexec/include/stdexec/execution.hpp:3965:75: warning: unused parameter '__sndr2' [-Wunused-parameter]
    void __test_ensure_started_sender(__sender<_SenderId, _EnvId> const & __sndr2){};
                                                                          ^
/home/sdowney/src/papers/cppnow23/sender-examples/extern/stdexec/include/stdexec/execution.hpp:5722:59: warning: unused parameter '__self' [-Wunused-parameter]
        friend empty_env tag_invoke(get_env_t, const __t& __self) noexcept {
                                                          ^
/home/sdowney/src/papers/cppnow23/sender-examples/extern/stdexec/include/stdexec/execution.hpp:5866:57: warning: unused parameter '__self' [-Wunused-parameter]
      friend empty_env tag_invoke(get_env_t, const __t& __self) noexcept {
                                                        ^
/home/sdowney/src/papers/cppnow23/sender-examples/src/examples/hello.cpp:19:8: warning: unused variable '[i]' [-Wunused-variable]
  auto [i] = stdexec::sync_wait(add_42).value();
       ^
7 warnings generated.
[8/14] : && /usr/bin/clang++-15 -std=c++20    -Wall -Wextra    -stdlib=libc++  -O3 -g -DNDEBUG  src/examples/CMakeFiles/hello.dir/RelWithDebInfo/hello.cpp.o -o src/examples/RelWithDebInfo/hello   && :
[9/14] /usr/bin/clang++-15 -DCMAKE_INTDIR=\"RelWithDebInfo\" -I/home/sdowney/src/papers/cppnow23/sender-examples/extern/stdexec/include -std=c++20    -Wall -Wextra    -stdlib=libc++  -O3 -g -DNDEBUG -MD -MT src/examples/CMakeFiles/concurent.dir/RelWithDebInfo/concurent.cpp.o -MF src/examples/CMakeFiles/concurent.dir/RelWithDebInfo/concurent.cpp.o.d -o src/examples/CMakeFiles/concurent.dir/RelWithDebInfo/concurent.cpp.o -c /home/sdowney/src/papers/cppnow23/sender-examples/src/examples/concurent.cpp
In file included from /home/sdowney/src/papers/cppnow23/sender-examples/src/examples/concurent.cpp:1:
/home/sdowney/src/papers/cppnow23/sender-examples/extern/stdexec/include/stdexec/execution.hpp:130:50: warning: unused parameter '__t' [-Wunused-parameter]
      constexpr __result_t<_Tp> operator()(_Tp&& __t) const noexcept(noexcept(__result_t<_Tp>{})) {
                                                 ^
/home/sdowney/src/papers/cppnow23/sender-examples/extern/stdexec/include/stdexec/execution.hpp:968:43: warning: unused parameter '__sndr' [-Wunused-parameter]
      constexpr auto operator()(_Sender&& __sndr, const _Env& __env) const noexcept
                                          ^
/home/sdowney/src/papers/cppnow23/sender-examples/extern/stdexec/include/stdexec/execution.hpp:968:63: warning: unused parameter '__env' [-Wunused-parameter]
      constexpr auto operator()(_Sender&& __sndr, const _Env& __env) const noexcept
                                                              ^
/home/sdowney/src/papers/cppnow23/sender-examples/extern/stdexec/include/stdexec/execution.hpp:3965:75: warning: unused parameter '__sndr2' [-Wunused-parameter]
    void __test_ensure_started_sender(__sender<_SenderId, _EnvId> const & __sndr2){};
                                                                          ^
/home/sdowney/src/papers/cppnow23/sender-examples/extern/stdexec/include/stdexec/execution.hpp:5722:59: warning: unused parameter '__self' [-Wunused-parameter]
        friend empty_env tag_invoke(get_env_t, const __t& __self) noexcept {
                                                          ^
/home/sdowney/src/papers/cppnow23/sender-examples/extern/stdexec/include/stdexec/execution.hpp:5866:57: warning: unused parameter '__self' [-Wunused-parameter]
      friend empty_env tag_invoke(get_env_t, const __t& __self) noexcept {
                                                        ^
6 warnings generated.
[10/14] : && /usr/bin/clang++-15 -std=c++20    -Wall -Wextra    -stdlib=libc++  -O3 -g -DNDEBUG  src/examples/CMakeFiles/concurent.dir/RelWithDebInfo/concurent.cpp.o -o src/examples/RelWithDebInfo/concurent   && :
[11/14] /usr/bin/clang++-15 -DCMAKE_INTDIR=\"RelWithDebInfo\" -I/home/sdowney/src/papers/cppnow23/sender-examples/extern/googletest/googletest/include -I/home/sdowney/src/papers/cppnow23/sender-examples/extern/googletest/googletest -std=c++20    -Wall -Wextra    -stdlib=libc++  -O3 -g -DNDEBUG -Wall -Wshadow -Wconversion -Wundef -DGTEST_HAS_PTHREAD=1 -fexceptions -W -Wpointer-arith -Wreturn-type -Wcast-qual -Wwrite-strings -Wswitch -Wunused-parameter -Wcast-align -Wchar-subscripts -Winline -Wredundant-decls -MD -MT extern/googletest/googletest/CMakeFiles/gtest.dir/RelWithDebInfo/src/gtest-all.cc.o -MF extern/googletest/googletest/CMakeFiles/gtest.dir/RelWithDebInfo/src/gtest-all.cc.o.d -o extern/googletest/googletest/CMakeFiles/gtest.dir/RelWithDebInfo/src/gtest-all.cc.o -c /home/sdowney/src/papers/cppnow23/sender-examples/extern/googletest/googletest/src/gtest-all.cc
[12/14] : && /usr/bin/cmake -E rm -f lib/RelWithDebInfo/libgtest.a && /usr/bin/llvm-ar-15 qc lib/RelWithDebInfo/libgtest.a  extern/googletest/googletest/CMakeFiles/gtest.dir/RelWithDebInfo/src/gtest-all.cc.o && /usr/bin/llvm-ranlib-15 lib/RelWithDebInfo/libgtest.a && :
[13/14] : && /usr/bin/cmake -E rm -f lib/RelWithDebInfo/libgtest_main.a && /usr/bin/llvm-ar-15 qc lib/RelWithDebInfo/libgtest_main.a  extern/googletest/googletest/CMakeFiles/gtest_main.dir/RelWithDebInfo/src/gtest_main.cc.o && /usr/bin/llvm-ranlib-15 lib/RelWithDebInfo/libgtest_main.a && :
[14/14] : && /usr/bin/clang++-15 -std=c++20    -Wall -Wextra    -stdlib=libc++  -O3 -g -DNDEBUG  src/scratch/CMakeFiles/scratch_test.dir/RelWithDebInfo/scratch.t.cpp.o -o src/scratch/RelWithDebInfo/scratch_test  src/scratch/RelWithDebInfo/libscratch.a  lib/RelWithDebInfo/libgtest.a  lib/RelWithDebInfo/libgtest_main.a  lib/RelWithDebInfo/libgtest.a && cd /home/sdowney/src/papers/cppnow23/cmake.bld/sender-examples/build-clang-15/src/scratch && /usr/bin/cmake -D TEST_TARGET=scratch_test -D TEST_EXECUTABLE=/home/sdowney/src/papers/cppnow23/cmake.bld/sender-examples/build-clang-15/src/scratch/RelWithDebInfo/scratch_test -D TEST_EXECUTOR= -D TEST_WORKING_DIR=/home/sdowney/src/papers/cppnow23/cmake.bld/sender-examples/build-clang-15/src/scratch -D TEST_EXTRA_ARGS= -D TEST_PROPERTIES= -D TEST_PREFIX= -D TEST_SUFFIX= -D TEST_FILTER= -D NO_PRETTY_TYPES=FALSE -D NO_PRETTY_VALUES=FALSE -D TEST_LIST=scratch_test_TESTS -D CTEST_FILE=/home/sdowney/src/papers/cppnow23/cmake.bld/sender-examples/build-clang-15/src/scratch/scratch_test[1]_tests.cmake -D TEST_DISCOVERY_TIMEOUT=5 -D TEST_XML_OUTPUT_DIR= -P /usr/share/cmake-3.25/Modules/GoogleTestAddTests.cmake
cd ../cmake.bld/sender-examples/build-clang-15 && ctest
Test project /home/sdowney/src/papers/cppnow23/cmake.bld/sender-examples/build-clang-15
    Start 1: ScratchTest.TestGTest
1/2 Test #1: ScratchTest.TestGTest ............   Passed    0.00 sec
    Start 2: ScratchTest.Breathing
2/2 Test #2: ScratchTest.Breathing ............   Passed    0.00 sec

100% tests passed, 0 tests failed out of 2

Total Test time (real) =   0.01 sec
make[1]: Leaving directory '/home/sdowney/src/papers/cppnow23/sender-examples'
make -f targets.mk test CONFIG= TOOLCHAIN=clang-15
make[1]: Entering directory '/home/sdowney/src/papers/cppnow23/sender-examples'
cmake --build ../cmake.bld/sender-examples/build-clang-15  --config RelWithDebInfo --target all -v -- -k 0
ninja: no work to do.
cd ../cmake.bld/sender-examples/build-clang-15 && ctest
Test project /home/sdowney/src/papers/cppnow23/cmake.bld/sender-examples/build-clang-15
    Start 1: ScratchTest.TestGTest
1/2 Test #1: ScratchTest.TestGTest ............   Passed    0.00 sec
    Start 2: ScratchTest.Breathing
2/2 Test #2: ScratchTest.Breathing ............   Passed    0.00 sec

100% tests passed, 0 tests failed out of 2

Total Test time (real) =   0.01 sec
make[1]: Leaving directory '/home/sdowney/src/papers/cppnow23/sender-examples'
make -f targets.mk install CONFIG= TOOLCHAIN=clang-15
make[1]: Entering directory '/home/sdowney/src/papers/cppnow23/sender-examples'
echo INSTALL
INSTALL
DESTDIR=/home/sdowney/src/papers/cppnow23/install ninja -C ../cmake.bld/sender-examples/build-clang-15 -k 0  install
ninja: Entering directory `../cmake.bld/sender-examples/build-clang-15'
[0/1] Install the project...
-- Install configuration: "RelWithDebInfo"
-- Installing: /home/sdowney/src/papers/cppnow23/install/lib/cmake/SenderExamplesTargets.cmake
-- Installing: /home/sdowney/src/papers/cppnow23/install/lib/cmake/SenderExamplesTargets-relwithdebinfo.cmake
-- Installing: /home/sdowney/src/papers/cppnow23/install/lib/cmake/SenderExamplesConfig.cmake
-- Installing: /home/sdowney/src/papers/cppnow23/install/lib/cmake/SenderExamplesConfigVersion.cmake
-- Installing: /home/sdowney/src/papers/cppnow23/install/lib/libscratch.a
-- Up-to-date: /home/sdowney/src/papers/cppnow23/install/include/senderexamples
-- Up-to-date: /home/sdowney/src/papers/cppnow23/install/include/senderexamples/scratch.h
-- Installing: /home/sdowney/src/papers/cppnow23/install/bin/main
-- Installing: /home/sdowney/src/papers/cppnow23/install/bin/hello
make[1]: Leaving directory '/home/sdowney/src/papers/cppnow23/sender-examples'
#+end_example

#+name: hello
#+BEGIN_SRC shell :exports results :results output :wrap example
./install/bin/hello
#+end_src

#+NAME: tangle-buffer
#+HEADERS: :exports none :results none
#+BEGIN_SRC emacs-lisp
(org-babel-tangle)
#+END_SRC
